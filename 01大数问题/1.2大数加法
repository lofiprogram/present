大数加法
（不考虑前导0与考虑前导0）

两个大数相加，先分别用字符串存储两个大数。
然后用int数组倒序存每一位（将字符转换为数字）。

然后先从最低位开始相加，判断是否进位1。
然后一直往高位走，最后判断最后一次相加是否要进位1。

在进行加法运算的时候会有一个前导0的问题。
例如001+002，应该等于3，但是如果按照常规计算，得出的结果是003。
所以在计算是需要注意一下，具体实现在下面的代码中。

例如：计算1234 + 5686 =？

  4 3 2 1
+ 5 6 8 6
  9//不进位，继续计算下一位。
    9//不进位，继续计算下一位。
      0//进位1，并存储其个位数0，继续计算下一位。
        8//7+1=8。
        
最后结果为8099。

代码实现参考1.21.cpp和1.22.cpp。

/*
https://blog.csdn.net/ysz171360154/article/details/85006990
*/
