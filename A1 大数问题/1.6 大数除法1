大数除法

除法中四个常用名称：被除数，除数，商，余数。
例如：53/8=6余5：其中53为被除数，8为除数，6为商，5为余数 。

也可以直接要求得到商，如：53/8=6.625。
实际上小数部分0.625就是余数除以除数的结果5/8=0.625。

#include<stdio.h>
int main()
{
    long long n,m,mer,rem;
    scanf("%lld %lld",&n,&m);
    if(n<m)   //被除数小于除数，商为0，余数为m
    {
        printf("商：0\n余数：%d\n",m);
    }
    if(n==m)  //两数相等，商为1，余数为0
    {
        printf("商：1\n余数：0\n");
    }
    if(n>m)   //被除数大于除数
    {
        for(int i=1;;i++)
        {
            n=n-1;
            if(n%m==0)
            {
                mer=n/m;
                rem=i;
                break;
            }
        }
        printf("商：%lld\n余数：%lld\n",mer,rem);
    }
    return 0;
}

上述一般除法需要判断：
输入的被除数和除数的大小。
如果被除数比除数小或者两数相等，则直接得到商和余数了。
如果被除数比除数大，那么我们就把被除数放循环里，每次减1，直到能与除数整除。
当数的大小超过long long，该办法便不再有效。

while(~scanf("%s %s",a,b))
    {
        len1=strlen(a);//被除数位数
        len2=strlen(b);//除数位数
 
        for(i=len1-1,j=0;i>=0;i--)//将字符串中各个元素倒序储存在数组中
        {
            x[j++]=a[i]-'0';//a[i]-'0'的意思是：a[i]是一个字符，如果为'1'，那么在ASCLL是49，而'0'是48 ，所以 49 - 48 = 1，就转化成了数字
        }
        for(i=len2-1,k=0;i>=0;i--)
        {
            y[k++]=b[i]-'0';
        }

由之前的大数加法减法乘法运算可知：

先将大数以字符串的形式输入。
然后分别得出两个大数的位数。
最后利用数组倒序存储字符串中的每一个元素，并转化为数字。

也可以不倒置存储，但是相应的代码就需要做出改变。
例如倒置之后得到结果要去除前导0，不倒置得到的结果要去除后缀0。

/*
https://blog.csdn.net/ysz171360154/article/details/88956342
*/

