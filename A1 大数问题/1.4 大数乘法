大数乘法

大数乘法的核心在于：

乘运算：c[i+j]=c[i+j]+a[i]*b[j];

进位运算： if(c[i]>=10)
        {
            c[i+1]=c[i+1]+c[i]/10;//进位运算
            c[i]=c[i]%10;
        }
  
剩下的则是判断两个数正负，处理负号，前导零的处理等问题。



大数乘法基本思想与大数的加法减法一样，但是乘运算与加减还是有很大区别的。
根据下图，我们可以看到两个数相乘，既是两个数每一位的相乘，之后再相加。

          1   2   3
          4   5   6
          
          6  12  18
      5  10  15
   4  8  12
   
   4 13  28  27  18
   5  6   0   8   8


并且我们可以知道，两个数相乘的结果的位数不会大于两个数位数之和。
例如：9*9=81，位数为1+1=2，说明个位数相乘最大位数不会超过2位，其他同理。

乘法运算中我们需要进位，与加法不同的是，加法只需要判断最后一位有没有大于10，而乘法中每一次都需要判断。

而且我们可能会遇到负数与正数，负数与负数的相乘，这样就要分别考虑了。

还有前导0的问题。

知道这几个问题，那么乘法的基本思想就明白了。

代码实现参考1.41.cpp和1.42.cpp。

/*
https://blog.csdn.net/ysz171360154/article/details/88918627
*/
